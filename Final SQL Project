-- In this SQL I'm querying a database which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

-- Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT FirstName, LastName, CustomerID, Country
FROM customers
WHERE Country != 'USA';

-- Show only the Customers from Brazil.
SELECT FirstName, LastName, CustomerID, Country
FROM customers
WHERE Country = 'Brazil';

-- Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.Invoiceid, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
INNER JOIN invoices ON invoices.CustomerID = customers.CustomerID
WHERE invoices.BillingCountry = 'Brazil'
;

-- Show the Employees who are Sales Agents.
SELECT FirstName, LastName, Title
FROM employees
WHERE Title = 'Sales Support Agent'
;

-- Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices
ORDER BY BillingCountry;

-- Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT invoices.InvoiceID, employees.LastName, employees.FirstName
FROM invoices
INNER JOIN customers ON customers.CustomerID = invoices.CustomerID
LEFT JOIN employees ON employees.EmployeeID = customers.SupportRepID
;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.InvoiceID, invoices.Total, customers.FirstName AS CustomerFName, customers.LastName AS CustomerLName, customers.Country, employees.LastName AS AgentLName, employees.FirstName AS AgentFName
FROM invoices
INNER JOIN customers ON customers.CustomerID = invoices.CustomerID
LEFT JOIN employees ON employees.EmployeeID = customers.SupportRepID
;

-- How many Invoices were there in 2009?
SELECT COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate LIKE '2009%';

--What are the total sales for 2009?
SELECT SUM(Total) AS '2009 Sales'
FROM invoices
WHERE InvoiceDate LIKE '2009%';

-- Write a query that includes the purchased track name with each invoice line ID.
SELECT tracks.Name AS 'Track Name', invoice_items.InvoiceLineID
FROM tracks
INNER JOIN invoice_items ON tracks.TrackID = invoice_items.TrackID;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT tracks.Name AS 'Track', artists.Name AS Artist, invoice_items.InvoiceLineID
FROM tracks
INNER JOIN invoice_items ON tracks.TrackID = invoice_items.TrackID
LEFT JOIN albums ON tracks.AlbumId = albums.AlbumId
LEFT JOIN artists ON albums.ArtistId = artists. ArtistId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT * FROM tracks LIMIT 5;
SELECT * FROM albums LIMIT 5;
SELECT * FROM media_types LIMIT 5;
SELECT * FROM genres LIMIT 5;
SELECT tracks.Name AS 'Track', albums.Title AS 'Album', media_types.Name AS 'Media Type', genres.Name AS 'Genre'
FROM tracks
INNER JOIN albums ON tracks.AlbumId = albums.AlbumId
LEFT JOIN media_types ON tracks.MediaTypeId = media_types.MediaTypeId
LEFT JOIN genres ON tracks.GenreId = genres.GenreId;

-- Show the total sales made by each sales agent.
SELECT employees.EmployeeID, SUM(invoices.Total) AS TotalSales
FROM invoices
INNER JOIN customers ON customers.Customerid = invoices.Customerid
LEFT JOIN employees ON employees.EmployeeId = customers.SupportRepId
GROUP BY employees.EmployeeID;

--Which sales agent made the most dollars in sales in 2009?
SELECT employees.EmployeeID, SUM(invoices.Total) AS TotalSales
FROM invoices
INNER JOIN customers ON customers.Customerid = invoices.Customerid
LEFT JOIN employees ON employees.EmployeeId = customers.SupportRepId
WHERE invoices.InvoiceDate LIKE '2009%'
GROUP BY employees.EmployeeID
ORDER BY TotalSales DESC
LIMIT 1;

--What is the average invoice total for each customer?
SELECT customers.CustomerId, customers.FirstName, customers.LastName, AVG(invoices.Total) AS AverageInvoiceTotal
FROM invoices
INNER JOIN customers ON customers.CustomerId = invoices.CustomerId
GROUP BY customers.CustomerId;

-- What is the total number of tracks purchased per genre?
SELECT genres.Name AS Genre, COUNT(invoice_items.TrackId) AS TotalTracksPurchased
FROM invoice_items
INNER JOIN tracks ON tracks.TrackId = invoice_items.TrackId
INNER JOIN genres ON genres.GenreId = tracks.GenreId
GROUP BY genres.GenreId, Genre
ORDER BY TotalTracksPurchased DESC;

-- Which customer made the highest total purchase amount?
SELECT customers.CustomerId, customers.FirstName, customers.LastName, SUM(invoices.Total) AS TotalSpent
FROM invoices
INNER JOIN customers ON customers.CustomerId = invoices.CustomerId
GROUP BY customers.CustomerId
ORDER BY TotalSpent DESC
LIMIT 1;
